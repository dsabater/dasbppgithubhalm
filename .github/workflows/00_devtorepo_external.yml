# Export solution from DEV environment
#  Unpack it and prepare, commit and push a git branch with the changes
name: 00_devtorepo_external
run-name: Export solution '${{ github.event.client_payload.solution_name }}' from environment ${{ github.event.client_payload.environment_name }} to Repo  by @${{ github.actor }}

on:
  repository_dispatch: 
    types: [ 'devtorepo' ]
   
permissions:
  contents: write           
jobs:
  export:

    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment_name }}
    
    env:
      RUNNER_DEBUG: 1
      
    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: Get current timestamp
      run: |
        echo "timestamp=$(date +"%Y%m%d")" >> "$GITHUB_ENV"

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@latest

    - name: Set solution version
      uses: microsoft/powerplatform-actions/set-online-solution-version@latest
      with:
        environment-url: ${{ vars.ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANT_ID }}
        name: ${{ github.event.client_payload.solution_name }}
        version: ${{github.event.client_payload.solution_version_number}}.${{ env.timestamp }}.${{ github.run_number }}

    - name: Publish customizations
      uses: microsoft/powerplatform-actions/publish-solution@latest
      with:
        environment-url: ${{ vars.ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANT_ID }}
  
    - name: Export Solution - Unmanaged
      uses: microsoft/powerplatform-actions/export-solution@latest
      with:
        environment-url: ${{ vars.ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANT_ID }}
        solution-name:  ${{ github.event.client_payload.solution_name }}
        solution-output-file: 'Solution.zip'
        overwrite: true  

    - name: Export Solution - Managed
      uses: microsoft/powerplatform-actions/export-solution@latest
      with:
        environment-url: ${{ vars.ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{ vars.TENANT_ID }}
        solution-name: ${{ github.event.client_payload.solution_name }}
        solution-output-file: 'Solution_managed.zip'
        managed: true
        overwrite: true

    - name: Upload Solution Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: solution-artifacts
        path: |
          Solution.zip
          Solution_managed.zip

  push:
    needs: export
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v4

    - name: Download Solution Artifacts
      uses: actions/download-artifact@v4
      with:
        name: solution-artifacts

    - name: Get current timestamp
      run: |
        echo "timestamp=$(date +"%Y%m%d")" >> "$GITHUB_ENV"

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@latest

    - name: Unpack Solution
      uses: microsoft/powerplatform-actions/unpack-solution@latest
      with:
        solution-file: 'Solution.zip'
        solution-type: 'Both'
        solution-folder: 'solutions/${{ github.event.client_payload.solution_name }}'
        overwrite-files: true
    
    - name: Prepare solution changes for check-in into source control
      uses: microsoft/powerplatform-actions/branch-solution@latest
      with:
        solution-folder: 'solutions/${{ github.event.client_payload.solution_name }}'
        solution-target-folder: 'src/solutions/${{ github.event.client_payload.solution_name }}'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true

    - name: Git Fetch and Commit
      run: |
        git fetch --all  
        git config --global user.email "no-reply@github.com"
        git config --global user.name "@${{ github.actor }}"
        git checkout main
        git add --all 
        git commit -m "${{ github.event.client_payload.git_comment }} -- version ${{github.event.client_payload.solution_version_number}}.${{ env.timestamp }}.${{ github.run_number }}" 
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push
